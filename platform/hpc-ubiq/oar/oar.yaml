---
# Copyright The Ubiquity Authors.
#
# Licensed under the Apache License, Version 2.0. Previously licensed under the Functional Source License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://github.com/ubiquitycluster/ubiquity-open/blob/main/LICENSE
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# This software was previously licensed under the Functional Source License but has now transitioned to an Apache 2.0 License
# as of June 2025.
# See the License for the specific language governing permissions and
# limitations under the License.

----
apiVersion: v1
kind: Service
metadata:
  name: nodes
  namespace: hpc-ubiq
spec:
  selector:
    net: headless
  clusterIP: None

----
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hpc-node
  namespace: ubiq-oar
  labels:
     name: hpc-node
spec:
  selector:
    matchLabels:
      app: oar-node
  serviceName: "nodes"
  replicas: 2
  template:
    metadata:
      labels:
        app: oar-node
        net: headless
        role: compute-node
        partition: COMPUTE
    spec:
      initContainers:
      - name: init-oar
        image: nyk0/oarinit
        command: ["/usr/local/bin/python"]
        args: ["generate_oar_conf.py"]
        volumeMounts:
        - mountPath: /oarconf
          name: oarconf
      containers:
      - name: oar-node
        image: nyk0/oar
        resources:
          limits:
            cpu: "2"
          requests:
            cpu: "2"
        command: ["/usr/sbin/sshd"]
        args: ["-D","-f","/etc/oar/sshd_config"]
        securityContext:
          capabilities:
            add: ["SYS_CHROOT"]
        volumeMounts:
        - mountPath: /oarconf
          name: oarconf
        - mountPath: /home
          name: home
#      imagePullSecrets:
#      - name: regcred
      volumes:
      - name: oarconf
        emptyDir: {}
      - name: home
        persistentVolumeClaim:
          claimName: pvc-nfs-home
      dnsConfig:
        searches:
          - nodes.ubiq-oar.svc.cluster.local

----
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: control-node
  namespace: ubiq-oar
  labels:
     name: control-node
spec:
  selector:
    matchLabels:
      app: oar-server
  serviceName: "nodes"
  replicas: 1
  template:
    metadata:
      labels:
        app: oar-server
        role: control-node
        net: headless
    spec:
      initContainers:
      - name: init-oar
        image: nyk0/oarinit
        command: ["/bin/bash"]
        args: ["init-postgres.sh"]
        volumeMounts:
        - mountPath: /oarconf
          name: oarconf
      containers:
      - name: oar-conf
        image: nyk0/oarconf
        command: ["/usr/local/bin/python"]
        args: ["generate_oar_resources.py"]
        volumeMounts:
        - mountPath: /oarconf
          name: oarconf
      - name: oar-server
        image: nyk0/oar
        command: ["/usr/sbin/Almighty"]
        volumeMounts:
        - mountPath: /oarconf
          name: oarconf
        - mountPath: /home
          name: home
        securityContext:
          capabilities:
            add: ["NET_RAW"]
#      imagePullSecrets:
#      - name: regcred
      volumes:
      - name: oarconf
        emptyDir: {}
      - name: home
        persistentVolumeClaim:
          claimName: pvc-nfs-home
      dnsConfig:
        searches:
          - nodes.ubiq-oar.svc.cluster.local

----
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db-node
  namespace: ubiq-oar
  labels:
     name: db-node
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: "nodes"
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
        role: db-node
        net: headless
    spec:
      containers:
      - name: postgres
        image: postgres
        env:
        - name: POSTGRES_PASSWORD
          value: azerty
        - name: POSTGRES_USER
          value: root
      dnsConfig:
        searches:
          - nodes.ubiq-oar.svc.cluster.local
