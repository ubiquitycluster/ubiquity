# Copyright The Ubiquity Authors.
#
# Licensed under the Apache License, Version 2.0. Previously licensed under the Functional Source License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://github.com/ubiquitycluster/ubiquity-open/blob/main/LICENSE
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# This software was previously licensed under the Functional Source License but has now transitioned to an Apache 2.0 License
# as of June 2025.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: deploy-application
  annotations:
    workflows.argoproj.io/description: >-
      Leverages Argo Workflows' ability to interact directly with Kubernetes to deploy an Argo CD Application.
      It monitors the health status of the application and is only considered 'done' once the Argo CD
      Application reports itself as healthy.
    workflows.argoproj.io/maintainer: 'The Ubiquity Authors'
    workflows.argoproj.io/maintainer_url: 'https://github.com/ubiquitycluster/ubiquity'
    workflows.argoproj.io/version: '>= 3.4.2'
spec:
  entrypoint: main
  templates:
  - name: main
    dag:
      tasks:            
        - name: deploy-application
          template: deploy-application

  - name: deploy-application
    resource:
      action: create
      successCondition: status.health.status == Healthy
      failureCondition: status.health.status == Degraded
      manifest: |
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        metadata:
          name: final-application
          finalizers:
            - resources-finalizer.argocd.argoproj.io
          namespace: argocd
        spec:
          destination:
            namespace: final-application
            server: 'https://kubernetes.default.svc'
          project: default
          source:
            path: bootstrap/final-application
            repoURL: 'https://github.com/pipekit/argo-workflows-ci-example.git'
            targetRevision: HEAD
          syncPolicy:
            automated:
              prune: true
              selfHeal: true
            syncOptions:
              - PrunePropagationPolicy=background
              - PruneLast=true
              - CreateNamespace=true