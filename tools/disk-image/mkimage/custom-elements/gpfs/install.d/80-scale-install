#!/bin/bash
# Copyright The Ubiquity Authors.
#
# Licensed under the Functional Source License, Version 1.0, Apache 2.0 Change License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://github.com/ubiquitycluster/ubiquity/blob/main/LICENSE
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# It also allows for the transition of this software to an Apache 2.0 Licence
# on the second anniversary of the date we make the software available.
# See the License for the specific language governing permissions and
# limitations under the License.

if [ ${DIB_DEBUG_TRACE:-0} -gt 0 ]; then
    set -x
fi
set -o errexit
set -o nounset
set -o pipefail

mkdir /tmp/gpfs_install
./tmp/${DIB_GPFS_FILE} --dir /tmp/gpfs_install --silent
createrepo /tmp/gpfs_install

echo "############################################################"
echo "#            Install GPFS with kernel support              #"
echo "############################################################"

dnf config-manager --set-enabled crb

cat <<EOF > /etc/yum.repos.d/storage-scale.repo
[storage-scale]
name=storage-scale
baseurl=file:///tmp/gpfs_install
# exclude=*debuginfo*
enabled=1
gpgcheck=0
EOF

echo "############################################################"
echo "#              Storage Scale REPO                          #"
echo "############################################################"
ls /etc/yum.repos.d

cat /etc/yum.repos.d/storage-scale.repo

dnf config-manager --set-enabled storage-scale

unset ARCH
CHROOT_KERNEL=$(rpm -q --queryformat "%{installtime} %{version}-%{release}.%{arch}\n" kernel | sort -nr | sed -n 1p | cut -d' ' -f2)

install-packages kernel-devel-${CHROOT_KERNEL}
install-packages kernel-headers-${CHROOT_KERNEL}
install-packages kernel-tools-${CHROOT_KERNEL}
install-packages kernel-tools-libs-${CHROOT_KERNEL}
install-packages kernel-tools-libs-devel-${CHROOT_KERNEL}
install-packages gpfs.base gpfs.docs gpfs.ext gpfs.gpl gpfs.gskit
export ARCH=amd64
export PATH=/usr/lpp/mmfs/bin:$PATH

echo "############################################################"
echo "#             GPFS first boot Service                      #"
echo "############################################################"


cat <<'!' > /etc/systemd/system/gpfs_firstboot.service
[Unit]
Description=Ubiquity First Boot Script - GPFS Install
Wants=network-online.target
After=network-online.target

[Service]
Type=oneshot
ExecStart=/ubiquity-first-boot-gpfs

[Install]
WantedBy=multi-user.target
!

cat <<'!' > /ubiquity-first-boot-gpfs
#!/bin/bash

mmbuildgpl --kernel-release=${CHROOT_KERNEL}

# Clean up after ourselves
systemctl disable gpfs_firstboot.service
rm -f /etc/systemd/system/gpfs_firstboot.service
rm -f /ubiquity-first-boot-gpfs

!

chmod +x /ubiquity-first-boot-gpfs
systemctl enable gpfs_firstboot.service

#cat <<EOF > /etc/profile.d/gpfs
## This should live in /etc/profile.d/
#
## General Scale commands
#pathprepend() {
#  for ((i=$#; i>0; i--));
#  do
#    ARG=${!i}
#    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
#        PATH="$ARG${PATH:+":$PATH"}"
#    fi
#  done
#}

#if [ -d /usr/lpp/mmfs/bin ]; then
#  pathprepend /usr/lpp/mmfs/bin
#fi
#
#if [ -d /opt/ibm/MCStore/bin ]; then
#  pathprepend /opt/ibm/MCStore/bin
#fi
#
#export PATH
#EOF

dnf config-manager --set-disabled storage-scale

rm /etc/yum.repos.d/storage-scale.repo 
rm -rf /tmp/gpfs_install
rm /tmp/Stor*
