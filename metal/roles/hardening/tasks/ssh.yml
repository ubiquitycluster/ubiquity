# Copyright The Ubiquity Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Hardening tasks - SSH

# CIS 5.2.2
# STIG 040390
- name: "Hardening | Ensure SSH protocol is 2"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#Protocol|^Protocol"
    line: "Protocol 2"
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.3
- name: "Hardening | Ensure SSH loglevel is set"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#LogLevel|^LogLevel"
    line: 'LogLevel INFO'
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.4
# STIG 040710
- name: "Hardening | Ensure SSH X11Forwarding is disabled"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#X11Forwarding|^X11Forwarding"
    line: 'X11Forwarding no'
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.5
- name: "Hardening | Ensure SSH MaxAuthTries is set to 4 or less"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?MaxAuthTries \d'
    line: 'MaxAuthTries 4'
    validate: /usr/sbin/sshd -t -f %s

# STIG 040380
- name: "Hardening | Ensure The SSH daemon must not allow authentication using known hosts authentication"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "(?i)^#?IgnoreUserKnownHosts"
    line: "IgnoreUserKnownHosts yes"
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.6
# STIG 040330
# STIG 040350
- name: "Hardening | Ensure SSH IgnoreRhosts is enabled"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#IgnoreRhosts|^IgnoreRhosts"
    line: 'IgnoreRhosts yes'
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.7
# STIG 010470
- name: "Hardening | Disable Host-Based Authentication"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#HostbasedAuthentication|^HostbasedAuthentication"
    line: 'HostbasedAuthentication no'
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.8
# STIG 040370
#- name: "Hardening | Disable SSH Password Root Login"
#  lineinfile:
#    state: present
#    dest: /etc/ssh/sshd_config
#    regexp: "^#PermitRootLogin|^PermitRootLogin"
#    line: "PermitRootLogin {{ ssh_root_login }}"
#    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.9
# STIG 040460
- name: "Hardening | Ensure SSH UsePrivilegeSeparation is enabled"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#UsePrivilegeSeparation|^UsePrivilegeSeparation"
    line: "UsePrivilegeSeparation sandbox"
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.10
# STIG 010460
- name: "Hardening | Ensure SSH PermitUserEnvironment is disabled"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#PermitUserEnvironment|^PermitUserEnvironment"
    line: "PermitUserEnvironment no"
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.11
- name: "Hardening | Ensure only strong Ciphers are used"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#Ciphers|^Ciphers"
    line: "Ciphers {{ ssh_ciphers }}"
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.12
# STIG 040400
- name: "Hardening | Ensure only strong MAC algorithms are used"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#Ciphers|^MACs"
    line: "MACs {{ ssh_MACs }}"
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.13
# STIG 040320
- name: "Hardening | Ensure SSH Idle Timeout Interval is configured | clientalive"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#ClientAliveInterval|^ClientAliveInterval"
    line: "ClientAliveInterval 299"
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.13
# STIG 040340
- name: "Hardening | Ensure SSH Idle Timeout Interval is configured | MaxAlive"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#ClientAliveCountMax|^ClientAliveCountMax"
    line: "ClientAliveCountMax 3"
    validate: /usr/sbin/sshd -t -f %s

# CIS 5.2.16
- name: "Hardening | Ensure SSH warning banner is configured"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#Banner|^Banner"
    line: "Banner /etc/issue"
    validate: /usr/sbin/sshd -t -f %s

# CIS 1.7.1.2
# CIS 1.7.1.3
# CIS 1.7.1.5
# CIS 1.7.1.6
# STIG 010030
# STIG 010040
# STIG 010050
# STIG 040170
- name: "Hardening | Setup ssh banner"
  ansible.builtin.template:
    src: issue.j2
    dest: "{{ item }}"
    group: 'root'
    mode: '0600'
    owner: 'root'
  with_items:
    - /etc/issue
    - /etc/issue.net

# STIG 040470
- name: "Hardening | Ensure SSH Compression is delayed"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#Compression|^Compression"
    line: "Compression delayed"
    validate: /usr/sbin/sshd -t -f %s

# STIG 040360
- name: "Hardening | Ensure SSH PrintLastLog is enabled"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#PrintLastLog|^PrintLastLog"
    line: "PrintLastLog yes"
    validate: /usr/sbin/sshd -t -f %s

# STIG 040450
- name: "Hardening | Ensure SSH StrictMode is enabled"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#StrictModes|^StrictModes"
    line: "StrictModes yes"
    validate: /usr/sbin/sshd -t -f %s

# STIG 040430
- name: "Hardening | Ensure SSH GSSAPIAuthentication is disabled"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#GSSAPIAuthentication|^GSSAPIAuthentication"
    line: "GSSAPIAuthentication no"
    validate: /usr/sbin/sshd -t -f %s

# STIG 010300
- name: "Hardening | Ensure SSH PermitEmptyPasswords is disabled"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#PermitEmptyPasswords|^PermitEmptyPasswords"
    line: "PermitEmptyPasswords no"
    validate: /usr/sbin/sshd -t -f %s

- name: "Hardening | Exchange algorithms are used"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#KexAlgorithms|^KexAlgorithms"
    line: "KexAlgorithms {{ ssh_key_algorithms }}"
    validate: /usr/sbin/sshd -t -f %s

- name: "Hardening | Ensure SSH LoginGraceTime is set to one minute or less"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#LoginGraceTime|^LoginGraceTime"
    line: "LoginGraceTime 60"
    validate: /usr/sbin/sshd -t -f %s

- name: "Hardening | Ensure SSH PAM is enabled"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#UsePAM|^UsePAM"
    line: "UsePAM yes"
    validate: /usr/sbin/sshd -t -f %s

- name: "Hardening | Ensure SSH AllowTcpForwarding is disabled"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#AllowTcpForwarding|^AllowTcpForwarding"
    line: "AllowTcpForwarding no"
    validate: /usr/sbin/sshd -t -f %s

- name: "Hardening | Ensure SSH MaxStartups is configured to {{ ssh_max_startups }}"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^$MaxStartups|^MaxStartups"
    line: "MaxStartups {{ ssh_max_startups }}"
    validate: /usr/sbin/sshd -t -f %s

- name: "Hardening | Ensure SSH MaxSessions is limited to {{ ssh_max_sessions }}"
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^#MaxSessions|^MaxSessions"
    line: "MaxSessions {{ ssh_max_sessions }}"
    validate: /usr/sbin/sshd -t -f %s

- name: "Hardening | Reload ssh"
  ansible.builtin.service:
    name: sshd
    enabled: yes
    state: restarted
  changed_when: no

...
