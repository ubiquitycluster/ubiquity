# Copyright The Ubiquity Authors.
#
# Licensed under the Apache License, Version 2.0. Previously licensed under the Functional Source License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://github.com/ubiquitycluster/ubiquity/blob/main/LICENSE
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# This software was previously licensed under the Functional Source License but has now transitioned to an Apache 2.0 License
# as of June 2025.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Cilium pre flight check
- name: "Cilium | Pre flight pod check"
  block:
    - name: "Cilium | Set the retry count"
      ansible.builtin.set_fact:
        retry_count: "{{ 0 if retry_count is undefined else retry_count | int + 1 }}"
      run_once: true
      delegate_to: "{{ cilium_delegate_to }}"

    - name: "Cilium | Waiting for pre flight deployment"
      ansible.builtin.wait_for:
        timeout: 10
      run_once: true

    - name: "Cilium | Fetch current Cilium pre flight DaemonSet state"
      kubernetes.core.k8s_info:
        api_version: v1
        kind: DaemonSet
        name: cilium-pre-flight-check
        namespace: "{{ cilium_namespace }}"
      register: cilium_pre_flight_check_daemonset
      run_once: true
      delegate_to: "{{ cilium_delegate_to }}"

    - name: "Cilium | Register current Cilium pre flight pods running"
      ansible.builtin.set_fact:
        cilium_pre_flight_pods_running: "{{ cilium_pre_flight_check_daemonset | json_query(query) }}"
      vars:
        query: "resources[0].status.numberReady"
      run_once: true
      delegate_to: "{{ cilium_delegate_to }}"

    - name: "Cilium | Checking if Cilium pre flight pod count == Cilium pod count"
      ansible.builtin.fail:
        msg: "Pre flight count: {{ cilium_pre_flight_pods_running }} / Cilium count: {{ cilium_pods_running }}"
      when: cilium_pre_flight_pods_running | int != cilium_pods_running | int
      run_once: true
      delegate_to: "{{ cilium_delegate_to }}"
  rescue:
    - name: "Cilium | Fail if retry count is reached"
      ansible.builtin.fail:
        msg: Ended after 60 retries
      when: retry_count | int == 60
      run_once: true
      delegate_to: "{{ cilium_delegate_to }}"

    - name: "Cilium | Preflight waiting loop"
      ansible.builtin.debug:
        msg: "Waiting for Cilium pre flight pods starting up..."
      run_once: true
      delegate_to: "{{ cilium_delegate_to }}"

    - name: "Cilium | Sleeping"
      ansible.builtin.wait_for:
        timeout: 10
      run_once: true
      delegate_to: "{{ cilium_delegate_to }}"

    - name: "Cilium | Include pre flight checks"
      ansible.builtin.include_tasks:
        file: pre_flight_check.yml
