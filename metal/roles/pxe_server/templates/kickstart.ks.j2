# Copyright The Ubiquity Authors.
#
# Licensed under the Functional Source License, Version 1.0, Apache 2.0 Change License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://github.com/ubiquitycluster/ubiquity/blob/main/LICENSE
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# It also allows for the transition of this software to an Apache 2.0 Licence
# on the second anniversary of the date we make the software available.
# See the License for the specific language governing permissions and
# limitations under the License.

#version=RHEL8

# Do not use graphical install
text

# Keyboard layouts
keyboard --xlayouts='gb'
# System language
lang en_GB.UTF-8

# Partition clearing information
clearpart --all --drives={{ hostvars[item]['disk'] }}
# Partitioning
ignoredisk --only-use={{ hostvars[item]['disk'] }}
partition /boot/efi --fstype=vfat --size=512
partition / --fstype=ext4 --grow

# Network information
network --bootproto=static --device={{ hostvars[item]['network_interface'] }} --ip={{ hostvars[item]['ansible_host'] }} --gateway={{ internal_ipv4.gateway }} --nameserver={{ dns_server }} --netmask={{ internal_ipv4.netmask }} --ipv6=auto --hostname={{ hostvars[item]['inventory_hostname'] }} --activate

{% if 'external_interface' in hostvars[item] %}
# External Network Information
network --bootproto=dhcp --device={{ hostvars[item]['external_interface'] }} --nameserver={{ dns_server }} --no-activate --nodefroute
{% endif %}

# Use network installation
repo --name="Repository" --baseurl=http://{{ internal_ipv4.address }}/os
url --url="http://{{ internal_ipv4.address }}/os"
# Disable Setup Agent on first boot
firstboot --disable
# Do not configure the X Window System
skipx
# Enable NTP
services --enabled="chronyd"
# System timezone
timezone {{ timezone }} --utc

# Create user (locked by default)
user --groups=wheel --name=admin
# Add SSH key
sshkey --username=root "{{ ssh_public_key }}"
# Disable root password login
rootpw --lock

# Disable SELinux
selinux --disabled

# Disable firewall
firewall --disabled

%packages
@^custom-environment
openssh-server
iscsi-initiator-utils
python39
%end

# Enable iSCSI for Kubernetes storage
services --enable=iscsid

reboot
