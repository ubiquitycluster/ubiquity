---
# Copyright The Ubiquity Authors.
#
# Licensed under the Apache License, Version 2.0. Previously licensed under the Functional Source License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://github.com/ubiquitycluster/ubiquity/blob/main/LICENSE
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# This software was previously licensed under the Functional Source License but has now transitioned to an Apache 2.0 License
# as of June 2025.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Infiniband Drivers download and setup
  block:

  - name: Identify major and minor versions of Linux OS
    block:
    - name: Find Rocky version from RPMs
      shell:
        cmd: |
          ls {{ role_path }}/files/data/os/BaseOS/Packages/r/rocky-release* | tr -d [:alpha:][=/=][=_=][===][=\"=] | cut -d '-' -f3
      register: os_release
    - set_fact:
        os_version: "{{ os_release.stdout }}"
    when: base_os == "Rocky"

  - name: Identify major and minor versions of Linux OS
    block:
    - name: Find Fedora version from RPMs
      shell:
        cmd: |
          ls {{ role_path }}/files/data/os/BaseOS/Packages/r/rocky-release* | tr -d [:alpha:][=/=][=_=][===][=\"=] | cut -d '-' -f3
      register: os_release
    - set_fact:
        os_version: "{{ os_release.stdout }}"
    when: base_os == "Fedora"

  - name: Identify major and minor versions of Linux OS
    block:
    - name: Find Ubuntu version
      shell:
        cmd: |
          ls {{ role_path }}/files/data/os/BaseOS/Packages/r/rocky-release* | tr -d [:alpha:][=/=][=_=][===][=\"=] | cut -d '-' -f3
      register: os_release
    - set_fact:
        os_version: "{{ os_release.stdout }}"
    when: base_os == "Ubuntu"

  - name: Download Mellanox OFED ISO
    vars:
      rhel_os: ['Fedora', 'Rocky', 'RHEL']
    block:
    - name: Download Mellanox OFED ISO
      get_url:
        url: "https://content.mellanox.com/ofed/MLNX_OFED-{{ ofed.mlnx_version[ofed.version].version}}/MLNX_OFED_LINUX-{{ ofed.mlnx_version[ofed.version].version }}-rhel{{ base_os_version }}-{{ ansible_architecture }}.iso"
        dest: "{{ role_path }}/files/data/iso/MLNX_OFED_LINUX-{{ ofed.mlnx_version[ofed.version].version }}-rhel{{ base_os_version }}-{{ ansible_architecture }}.iso"
        checksum: "{{ ofed.mlnx_version[ofed.version].os[base_os][base_os_version].checksum }}"
      register: mlnxiso
      until: "'OK' in mlnxiso.msg or 'file already exists' in mlnxiso.msg"
      retries: 4
    - name: Extract OFED iso
      ansible.builtin.command:
        cmd: "xorriso -osirrox on -indev {{ mlnxiso.dest }} -extract / {{ role_path }}/files/data/misc/ofed-{{ ofed.mlnx_version[ofed.version].version }}"
        creates: "{{ role_path }}/files/data/misc/ofed-{{ ofed.mlnx_version[ofed.version].version }}/RPMS/repodata/repomd.xml"
    when: base_os in rhel_os

  - name: Download Mellanox OFED ISO
    block:
    - name: Ubuntu
      get_url:
        url: "https://content.mellanox.com/ofed/MLNX_OFED-{{ ofed.mlnx_version[ofed.version].version }}/MLNX_OFED_LINUX-{{ ofed.mlnx_version[ofed.version].version }}-ubuntu{{ base_os_version }}-{{ ansible_architecture }}.iso"
        dest: "{{ role_path }}/files/data/iso/MLNX_OFED_LINUX-{{ ofed.mlnx_version[ofed.version].version }}-ubuntu{{ base_os_version }}-{{ ansible_architecture }}.iso"
        checksum: "{{ ofed.mlnx_version[ofed.version].os[base_os][base_os_version].checksum }}"
      register: mlnxiso
      until: "'OK' in mlnxiso.msg or 'file already exists' in mlnxiso.msg"
      retries: 4
    - name: Extract OFED iso
      ansible.builtin.command:
        cmd: "xorriso -osirrox on -indev {{ mlnxiso.dest }} -extract / {{ role_path }}/files/data/misc/ofed-{{ ofed.mlnx_version[ofed.version].version }}"
        creates: "{{ role_path }}/files/data/misc/ofed-{{ ofed.mlnx_version[ofed.version].version }}/RPMS/repodata/repomd.xml"
    when: base_os == "Ubuntu"
